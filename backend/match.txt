import { useState } from "react";
import { MainLayout } from "@/components/layout/MainLayout";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card } from "@/components/ui/card";
import { 
  ShirtIcon, 
  Sparkles, 
  Camera,
  Palette, 
  User, 
  Clock,
  ThumbsUp,
  ThumbsDown,
  Loader2,
  Heart,
  Share2,
  ShoppingBag,
  Wand2,
  Calendar,
  Tag
} from "lucide-react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { supabase } from '@/lib/supabase';

// Mock data for recommended outfits
const mockRecommendations = [
  {
    id: 1,
    title: "Casual Weekend",
    items: [
      { id: 1, name: "Gray Hoodie", type: "outerwear", image: "https://images.unsplash.com/photo-1620799140188-3b2a02fd9a77?q=80&w=1072" },
      { id: 2, name: "Blue Denim Jeans", type: "bottom", image: "https://images.unsplash.com/photo-1542272604-787c3835535d?q=80&w=1026" },
      { id: 3, name: "White Sneakers", type: "shoes", image: "https://images.unsplash.com/photo-1595950653106-6c9ebd614d3a?q=80&w=987" },
    ],
    occasion: "casual",
    matchScore: 92,
    description: "A comfortable weekend outfit perfect for running errands or casual meetups."
  },
  {
    id: 2,
    title: "Business Casual",
    items: [
      { id: 4, name: "White Button-up Shirt", type: "top", image: "https://images.unsplash.com/photo-1598033129183-c4f50c736f10?q=80&w=1025" },
      { id: 5, name: "Gray Slacks", type: "bottom", image: "https://images.unsplash.com/photo-1580675945535-62b469b4699d?q=80&w=1170" },
      { id: 6, name: "Brown Oxfords", type: "shoes", image: "https://images.unsplash.com/photo-1612723675780-33e9676c951e?q=80&w=871" },
    ],
    occasion: "work",
    matchScore: 89,
    description: "A polished look for the office that balances professionalism and comfort."
  },
  {
    id: 3,
    title: "Evening Out",
    items: [
      { id: 7, name: "Black Blazer", type: "outerwear", image: "https://images.unsplash.com/photo-1617137984095-74e4e5e3613f?q=80&w=1332" },
      { id: 8, name: "Black Dress Shirt", type: "top", image: "https://images.unsplash.com/photo-1563630423918-b58f07336ac9?q=80&w=987" },
      { id: 9, name: "Dark Jeans", type: "bottom", image: "https://images.unsplash.com/photo-1602293589930-45aad59ba3ab?q=80&w=987" },
      { id: 10, name: "Black Dress Shoes", type: "shoes", image: "https://images.unsplash.com/photo-1543163521-1bf539c55dd2?q=80&w=1160" },
    ],
    occasion: "evening",
    matchScore: 95,
    description: "An elegant ensemble for dinner dates or social gatherings."
  }
];

type MatchType = "outfit" | "skin" | "body";

// Add import for AI service
import { getOutfitRecommendations } from "@/services/ai";

export default function Match() {
  const [activeTab, setActiveTab] = useState<MatchType>("outfit");
  const [isGenerating, setIsGenerating] = useState(false);
  const [matchComplete, setMatchComplete] = useState(false);
  const [occasion, setOccasion] = useState("");
  const [weather, setWeather] = useState("");
  const [recommendations, setRecommendations] = useState(mockRecommendations);
  
  const handleGenerate = async () => {
    if (!occasion) {
      alert("Please select an occasion");
      return;
    }

    setIsGenerating(true);
    try {
      // Get the current user ID from Supabase auth
      const { data: { session } } = await supabase.auth.getSession();
      if (!session?.user?.id) {
        throw new Error('Please sign in to generate outfits');
      }

      const userId = session.user.id; // Store the ID string

      // Fetch user data from all three tables with the correct ID format
      const [closetItems, preferences, profile] = await Promise.all([
        supabase.from('closet_items').select('*').eq('user_id', userId),
        supabase.from('user_preferences').select('*').eq('user_id', userId).single(),
        supabase.from('profiles').select('*').eq('id', userId).single()
      ]);

      // Pass all user data to the recommendation service
      const response = await getOutfitRecommendations({
        userId, // Pass the string ID directly
        occasion,
        weather,
        closetItems: closetItems.data || [],
        preferences: preferences.data || {},
        profile: profile.data || {}
      });

      // Rest of the function remains the same
      if (!response?.outfits?.length) {
        throw new Error('No outfit recommendations received');
      }

      setRecommendations(response.outfits.map(outfit => ({
        ...outfit,
        id: outfit.id || Math.random(),
        matchScore: outfit.matchScore || 85,
      })));
      
      setMatchComplete(true);
    } catch (error) {
      console.error("Error generating outfits:", error);
      alert(error instanceof Error ? error.message : 'Failed to generate outfits. Please try again.');
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <MainLayout>
      <div className="luxe-container py-12">
        <div className="flex flex-col md:flex-row md:items-end justify-between gap-4 mb-8">
          <div>
            <h1 className="text-3xl font-bold tracking-tight">Match</h1>
            <p className="text-muted-foreground mt-1">AI-powered outfit recommendations tailored to you</p>
          </div>
        </div>
        
        <Tabs 
          defaultValue="outfit" 
          value={activeTab}
          onValueChange={(value) => {
            setActiveTab(value as MatchType);
            setMatchComplete(false);
          }}
          className="space-y-8"
        >
          <TabsList className="grid grid-cols-3 max-w-md mx-auto">
            <TabsTrigger value="outfit" className="flex items-center gap-2">
              <ShirtIcon className="h-4 w-4" />
              <span>Outfit Match</span>
            </TabsTrigger>
            <TabsTrigger value="skin" className="flex items-center gap-2">
              <Palette className="h-4 w-4" />
              <span>Skin Tone</span>
            </TabsTrigger>
            <TabsTrigger value="body" className="flex items-center gap-2">
              <User className="h-4 w-4" />
              <span>Body Type</span>
            </TabsTrigger>
          </TabsList>
          
          {/* Outfit Match Tab */}
          <TabsContent value="outfit" className="animate-fade-in">
            <div className="grid grid-cols-1 lg:grid-cols-5 gap-8">
              <div className="lg:col-span-2">
                <div className="luxe-card p-6">
                  <h2 className="text-xl font-medium mb-4">Generate Your Outfit</h2>
                  
                  <div className="space-y-6">
                    <div>
                      <label className="block text-sm font-medium mb-2">Occasion</label>
                      <select 
                        className="w-full luxe-input"
                        value={occasion}
                        onChange={(e) => setOccasion(e.target.value)}
                      >
                        <option value="">Select occasion...</option>
                        <option value="casual">Casual Day</option>
                        <option value="work">Work / Office</option>
                        <option value="evening">Evening Out</option>
                        <option value="formal">Formal Event</option>
                        <option value="athletic">Athletic / Sports</option>
                      </select>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium mb-2">Weather</label>
                      <select className="w-full p-2 rounded-md border border-input bg-background">
                        <option value="">Select weather...</option>
                        <option value="hot">Hot (80°F+)</option>
                        <option value="warm">Warm (65-80°F)</option>
                        <option value="cool">Cool (50-65°F)</option>
                        <option value="cold">Cold (Below 50°F)</option>
                        <option value="rainy">Rainy</option>
                      </select>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium mb-2">Base Item (Optional)</label>
                      <div className="flex items-center space-x-3">
                        <Button variant="outline" className="flex-1">
                          <ShirtIcon className="mr-2 h-4 w-4" />
                          Select Item
                        </Button>
                        <span className="text-muted-foreground text-sm">or</span>
                        <Button variant="outline" className="flex-1">
                          <Camera className="mr-2 h-4 w-4" />
                          Take Photo
                        </Button>
                      </div>
                    </div>
                    
                    <div className="pt-2">
                      <Button 
                        className="w-full bg-luxe-purple hover:bg-luxe-purple-secondary"
                        onClick={handleGenerate}
                        disabled={isGenerating}
                      >
                        {isGenerating ? (
                          <>
                            <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                            Generating...
                          </>
                        ) : (
                          <>
                            <Sparkles className="mr-2 h-4 w-4" />
                            Generate Outfit
                          </>
                        )}
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="lg:col-span-3">
                {matchComplete ? (
                  <div className="luxe-card overflow-hidden animate-scale-in">
                    <div className="p-6 pb-3 border-b">
                      <div className="flex items-center justify-between">
                        <h3 className="text-xl font-medium">Recommended Outfits</h3>
                        <span className="text-xs bg-luxe-purple/10 text-luxe-purple-vivid px-2 py-1 rounded-full">
                          AI Generated
                        </span>
                      </div>
                      <p className="text-sm text-muted-foreground mt-1">
                        Based on your preferences and wardrobe
                      </p>
                    </div>
                    
                    <div className="divide-y">
                      // Update the recommendations mapping to use state
                      <div className="divide-y">
                        {recommendations.map((outfit) => (
                          <OutfitRecommendation key={outfit.id} outfit={outfit} />
                        ))}
                      </div>
                    </div>
                    
                    <div className="p-4 bg-accent/30 text-center">
                      <Button 
                        variant="outline" 
                        className="border-luxe-purple text-luxe-purple hover:bg-luxe-purple/10"
                      >
                        <Wand2 className="mr-2 h-4 w-4" />
                        Generate More Outfits
                      </Button>
                    </div>
                  </div>
                ) : (
                  <div className="h-full flex flex-col items-center justify-center text-center p-12 luxe-card">
                    <div className="h-16 w-16 rounded-full bg-luxe-purple/10 flex items-center justify-center mb-4">
                      <Sparkles className="h-8 w-8 text-luxe-purple" />
                    </div>
                    <h3 className="text-xl font-medium">Ready to Get Matched</h3>
                    <p className="text-muted-foreground mt-2 max-w-md">
                      Our AI will analyze your wardrobe and preferences to create the perfect outfit combinations for any occasion.
                    </p>
                    <div className="grid grid-cols-3 gap-4 mt-8 w-full max-w-md">
                      <MatchFeature icon={<Clock />} label="Quick" />
                      <MatchFeature icon={<Sparkles />} label="Precise" />
                      <MatchFeature icon={<User />} label="Personal" />
                    </div>
                  </div>
                )}
              </div>
            </div>
          </TabsContent>
          
          {/* Skin Tone Tab */}
          <TabsContent value="skin" className="animate-fade-in">
            <div className="max-w-3xl mx-auto">
              <div className="luxe-card p-6 mb-6">
                <h2 className="text-xl font-medium mb-4">Skin Tone Analysis</h2>
                <p className="text-muted-foreground mb-6">
                  Our AI analyzes your skin tone to recommend colors and styles that complement your natural features.
                </p>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h3 className="text-lg font-medium">Upload a Photo</h3>
                    <div 
                      className="border-2 border-dashed rounded-lg p-12 text-center cursor-pointer transition-all hover:border-luxe-purple/50 hover:bg-accent/50"
                    >
                      <div className="flex flex-col items-center justify-center space-y-4">
                        <div className="h-12 w-12 rounded-full bg-luxe-purple/10 flex items-center justify-center">
                          <Camera className="h-6 w-6 text-luxe-purple" />
                        </div>
                        <div>
                          <p className="font-medium">Upload a clear selfie</p>
                          <p className="text-xs text-muted-foreground mt-1">
                            In natural lighting for best results
                          </p>
                        </div>
                      </div>
                    </div>
                    <Button className="w-full bg-luxe-purple hover:bg-luxe-purple-secondary">
                      <Sparkles className="mr-2 h-4 w-4" />
                      Analyze Skin Tone
                    </Button>
                  </div>
                  
                  <div className="space-y-4">
                    <h3 className="text-lg font-medium">Why Skin Tone Matters</h3>
                    <ul className="space-y-3 text-sm">
                      <li className="flex gap-2">
                        <div className="h-5 w-5 rounded-full bg-luxe-purple/10 flex items-center justify-center flex-shrink-0 mt-0.5">
                          <Palette className="h-3 w-3 text-luxe-purple" />
                        </div>
                        <span>Colors that complement your skin make you look more radiant</span>
                      </li>
                      <li className="flex gap-2">
                        <div className="h-5 w-5 rounded-full bg-luxe-purple/10 flex items-center justify-center flex-shrink-0 mt-0.5">
                          <Palette className="h-3 w-3 text-luxe-purple" />
                        </div>
                        <span>Enhance your natural features with the right color palette</span>
                      </li>
                      <li className="flex gap-2">
                        <div className="h-5 w-5 rounded-full bg-luxe-purple/10 flex items-center justify-center flex-shrink-0 mt-0.5">
                          <Palette className="h-3 w-3 text-luxe-purple" />
                        </div>
                        <span>Build a wardrobe that truly works for your unique complexion</span>
                      </li>
                    </ul>
                    <div className="p-3 bg-accent/50 rounded-lg mt-4">
                      <p className="text-sm font-medium">Your privacy is protected</p>
                      <p className="text-xs text-muted-foreground">
                        All photos are processed securely and never shared with third parties
                      </p>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="luxe-card p-6">
                  <h3 className="text-lg font-medium mb-3">Complementary Colors</h3>
                  <p className="text-sm text-muted-foreground mb-4">
                    Once analyzed, we'll show your ideal color palette here.
                  </p>
                  <div className="grid grid-cols-6 gap-2">
                    {["bg-gray-200", "bg-gray-300", "bg-gray-400", "bg-gray-500", "bg-gray-600", "bg-gray-700"].map((color, i) => (
                      <div key={i} className="aspect-square rounded-md shadow-sm border">
                        <div className={w-full h-full rounded-md ${color}}></div>
                      </div>
                    ))}
                  </div>
                  <div className="mt-4 text-sm text-muted-foreground text-center">
                    Upload a photo to see your custom color palette
                  </div>
                </div>
                
                <div className="luxe-card p-6">
                  <h3 className="text-lg font-medium mb-3">Style Recommendations</h3>
                  <p className="text-sm text-muted-foreground mb-4">
                    Based on your skin tone, we'll recommend clothing styles.
                  </p>
                  <div className="space-y-2">
                    {["Fabric types", "Pattern suggestions", "Jewelry tones", "Makeup palettes"].map((item, i) => (
                      <div key={i} className="p-3 bg-accent/30 rounded-md text-sm">
                        {item}: <span className="text-muted-foreground">Analysis required</span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </TabsContent>
          
          {/* Body Type Tab */}
          <TabsContent value="body" className="animate-fade-in">
            <div className="max-w-3xl mx-auto">
              <div className="luxe-card p-6 mb-6">
                <h2 className="text-xl font-medium mb-4">Body Type Analysis</h2>
                <p className="text-muted-foreground mb-6">
                  Get style recommendations that enhance your unique body shape for the most flattering look.
                </p>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h3 className="text-lg font-medium">Your Measurements</h3>
                    <div className="space-y-3">
                      <div>
                        <label className="block text-sm font-medium mb-1">Height</label>
                        <Input 
                          type="text" 
                          placeholder="Height in cm or feet/inches" 
                          className="w-full" 
                        />
                      </div>
                      <div className="grid grid-cols-2 gap-3">
                        <div>
                          <label className="block text-sm font-medium mb-1">Bust/Chest</label>
                          <input type="text" placeholder="cm or inches" className="w-full luxe-input" />
                        </div>
                        <div>
                          <label className="block text-sm font-medium mb-1">Waist</label>
                          <input type="text" placeholder="cm or inches" className="w-full luxe-input" />
                        </div>
                      </div>
                      <div className="grid grid-cols-2 gap-3">
                        <div>
                          <label className="block text-sm font-medium mb-1">Hips</label>
                          <input type="text" placeholder="cm or inches" className="w-full luxe-input" />
                        </div>
                        <div>
                          <label className="block text-sm font-medium mb-1">Shoulder Width</label>
                          <input type="text" placeholder="cm or inches" className="w-full luxe-input" />
                        </div>
                      </div>
                    </div>
                    <Button className="w-full bg-luxe-purple hover:bg-luxe-purple-secondary mt-2">
                      <Sparkles className="mr-2 h-4 w-4" />
                      Get Style Recommendations
                    </Button>
                  </div>
                  
                  <div>
                    <h3 className="text-lg font-medium mb-3">Common Body Types</h3>
                    <div className="grid grid-cols-2 gap-3">
                      {[
                        { name: "Rectangle", description: "Shoulders, waist and hips are similar width" },
                        { name: "Triangle", description: "Hips wider than shoulders" },
                        { name: "Inverted Triangle", description: "Shoulders wider than hips" },
                        { name: "Hourglass", description: "Shoulders and hips similar with defined waist" },
                      ].map((type, i) => (
                        <div key={i} className="luxe-card p-3 border hover:border-luxe-purple/30 transition-colors cursor-pointer">
                          <h4 className="text-sm font-medium">{type.name}</h4>
                          <p className="text-xs text-muted-foreground mt-1">{type.description}</p>
                        </div>
                      ))}
                    </div>
                    <div className="mt-4 p-3 bg-accent/50 rounded-lg">
                      <p className="text-sm">
                        <span className="font-medium">Note:</span> All body types are beautiful and our recommendations aim to help you feel confident in styles that complement your shape.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <StyleCard title="Silhouettes" description="Clothing cuts and shapes that enhance your proportions" />
                <StyleCard title="Styling Tips" description="How to accentuate your favorite features" />
                <StyleCard title="Avoid" description="Styles that may be less flattering for your shape" />
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </MainLayout>
  );
}

interface OutfitProps {
  outfit: {
    id: number;
    title: string;
    items: { id: number; name: string; type: string; image: string }[];
    occasion: string;
    matchScore: number;
    description: string;
  };
}

function OutfitRecommendation({ outfit }: OutfitProps) {
  return (
    <div className="p-6">
      <div className="flex flex-col sm:flex-row gap-6">
        <div className="flex-shrink-0">
          <div className="grid grid-cols-2 gap-2" style={{ width: "160px" }}>
            {outfit.items.slice(0, 4).map((item, index) => (
              <div 
                key={item.id}
                className={`overflow-hidden rounded border ${
                  outfit.items.length === 3 && index === 0 ? "col-span-2" : ""
                }`}
              >
                <img 
                  src={item.image} 
                  alt={item.name}
                  className="w-full h-full object-cover aspect-square"
                />
              </div>
            ))}
          </div>
        </div>
        
        <div className="flex-1">
          <div className="flex items-center justify-between mb-1">
            <h4 className="text-lg font-medium">{outfit.title}</h4>
            <div className="flex items-center space-x-1">
              <span className="text-xs font-medium bg-luxe-purple text-white rounded-md px-2 py-0.5">
                {outfit.matchScore}% match
              </span>
            </div>
          </div>
          
          <p className="text-sm text-muted-foreground mb-3">{outfit.description}</p>
          
          <div className="flex flex-wrap gap-2 mb-4">
            <span className="inline-flex items-center text-xs gap-1 px-2 py-1 rounded-full bg-accent/80">
              <Calendar className="h-3 w-3" />
              <span className="capitalize">{outfit.occasion}</span>
            </span>
            <span className="inline-flex items-center text-xs gap-1 px-2 py-1 rounded-full bg-accent/80">
              <Tag className="h-3 w-3" />
              <span>{outfit.items.length} items</span>
            </span>
          </div>
          
          <div className="flex items-center justify-between">
            <div className="flex space-x-1">
              <Button variant="outline" size="sm" className="h-8">
                <ThumbsUp className="h-3 w-3 mr-1" />
                Like
              </Button>
              <Button variant="outline" size="sm" className="h-8">
                <ThumbsDown className="h-3 w-3 mr-1" />
                Dislike
              </Button>
            </div>
            <div className="flex space-x-1">
              <Button variant="ghost" size="sm" className="h-8">
                <Heart className="h-3 w-3" />
              </Button>
              <Button variant="ghost" size="sm" className="h-8">
                <Share2 className="h-3 w-3" />
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

function MatchFeature({ icon, label }: { icon: React.ReactNode; label: string }) {
  return (
    <div className="flex flex-col items-center p-3">
      <div className="h-10 w-10 rounded-full bg-luxe-purple/10 flex items-center justify-center mb-2">
        <div className="text-luxe-purple">{icon}</div>
      </div>
      <span className="text-sm font-medium">{label}</span>
    </div>
  );
}

interface StyleCardProps {
  title: string;
  description: string;
}

function StyleCard({ title, description }: StyleCardProps) {
  return (
    <Card className="p-5">
      <h3 className="text-lg font-medium">{title}</h3>
      <p className="text-sm text-muted-foreground mt-1">{description}</p>
      <div className="mt-3 p-3 bg-accent/30 rounded border border-dashed border-muted text-center">
        <span className="text-sm text-muted-foreground">Complete the analysis to see recommendations</span>
      </div>
    </Card>
  );
}